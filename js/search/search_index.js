var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.812,1,1.031]],["body/components/AppComponent.html",[0,1.551,1,1.83,2,0.486,3,0.486,4,2.319,5,2.319,6,2.319,7,0.337,8,2.733,9,1.089,10,2.576,11,2.319,12,3.579,13,3.101,14,3.504,15,2.973,16,4.311,17,2.973,18,4.311,19,0.568,20,0.046,21,0.751,22,0.409,23,0.203,24,1.556,25,2.973,26,2.973,27,2.973,28,3.462,29,2.319,30,1.238,31,2.319,32,1.226,33,1.762,34,2.319,35,1.226,36,0.966,37,2.319,38,0.035,39,0.035]],["title/modules/AppModule.html",[40,0.812,41,1.481]],["body/modules/AppModule.html",[1,1.95,2,0.351,3,0.351,7,0.243,19,0.929,20,0.047,21,0.542,22,0.421,23,0.147,24,1.124,35,1.758,38,0.028,39,0.028,40,0.993,41,2.827,42,1.272,43,2.407,44,2.777,45,1.758,46,1.973,47,1.973,48,1.973,49,1.973,50,1.973,51,2.527,52,2.232,53,2.066,54,1.674,55,1.451,56,2.428,57,3.458,58,3.458,59,1.674,60,2.385,61,2.428,62,1.674,63,1.674,64,2.385,65,1.451,66,2.428,67,1.973,68,1.973,69,1.973,70,2.428,71,2.428,72,2.066,73,1.451,74,2.428,75,2.066,76,2.428,77,2.428,78,1.674,79,2.428,80,2.066,81,1.674,82,1.674,83,1.973,84,1.973,85,1.864,86,1.674,87,1.674,88,2.428,89,2.428,90,2.428,91,2.428,92,2.428,93,2.428,94,2.428,95,1.674,96,2.428,97,2.428,98,2.428,99,2.428,100,4.027,101,0.997,102,2.428,103,2.428,104,1.272]],["title/modules/AppRoutingModule.html",[40,0.812,51,1.481]],["body/modules/AppRoutingModule.html",[0,1.003,2,0.505,3,0.505,7,0.35,19,0.887,20,0.047,21,0.78,22,0.537,23,0.211,32,1.274,35,1.611,36,1.391,38,0.036,39,0.036,40,1.003,51,2.315,60,3.046,64,3.046,65,2.088,69,2.84,105,2.409,106,3.493,107,3.046,108,3.493,109,2.088,110,2.84,111,1.434,112,3.493,113,3.938,114,4.417,115,4.417,116,4.417,117,3.493]],["title/modules/AppServerModule.html",[40,0.812,118,1.689]],["body/modules/AppServerModule.html",[0,0.875,1,1.923,2,0.441,3,0.441,7,0.305,19,0.905,20,0.047,21,0.681,22,0.492,23,0.184,24,1.411,32,1.923,33,1.597,38,0.033,39,0.033,40,1.161,41,2.709,42,1.597,43,2.712,44,3.129,45,1.111,53,2.416,54,2.102,55,1.821,60,2.788,62,2.102,64,2.102,65,1.821,95,2.102,107,3.129,109,1.821,110,2.477,111,1.251,113,2.477,118,3.24,119,2.477,120,2.477,121,3.048,122,3.048,123,3.048,124,4.043,125,2.102,126,3.048,127,3.048,128,2.477,129,2.102,130,3.048,131,1.597,132,2.102,133,3.048]],["title/components/AppShellComponent.html",[0,0.812,32,1.031]],["body/components/AppShellComponent.html",[0,1.536,1,1.04,2,0.412,3,0.412,4,1.968,5,1.968,6,1.968,7,0.286,9,0.924,11,1.968,12,3.392,13,2.94,15,2.668,17,2.668,19,0.482,20,0.047,21,0.637,22,0.347,23,0.173,24,1.321,25,2.668,26,2.668,27,2.668,28,3.245,29,1.968,30,1.111,31,1.968,32,1.716,33,2.719,34,1.968,35,1.04,36,0.82,37,1.968,38,0.031,39,0.031,105,3.027,109,2.623,128,3.825,129,2.668,134,2.319,135,2.668,136,3.869,137,1.791,138,3.568,139,3.869,140,3.869,141,0.557,142,1.111,143,3.825,144,2.019,145,0.982,146,2.853,147,2.853,148,2.668,149,0.724,150,1.171]],["title/injectables/BrowserNativeService.html",[52,1.308,151,0.552]],["body/injectables/BrowserNativeService.html",[2,0.518,3,0.518,7,0.359,19,0.606,20,0.046,21,0.801,22,0.436,23,0.217,38,0.036,39,0.036,52,2.079,141,0.7,142,1.29,144,2.013,145,1.245,149,1.305,151,0.957,152,4.178,153,2.916,154,1.969,155,5.139,156,5.139,157,3.587,158,3.587,159,3.587,160,3.587,161,2.143]],["title/injectables/GoogleMapsMockService.html",[151,0.552,162,1.949]],["body/injectables/GoogleMapsMockService.html",[2,0.508,3,0.508,7,0.352,19,0.75,20,0.046,21,0.785,22,0.428,23,0.213,38,0.036,39,0.036,85,1.628,86,2.425,87,2.425,131,2.325,135,3.705,141,0.686,142,1.274,145,0.893,149,1.126,151,0.948,154,1.772,162,3.059,163,3.059,164,1.861,165,2.425,166,3.516,167,1.821,168,3.606,169,3.606,170,3.606,171,1.443,172,2.858,173,2.858]],["title/injectables/GoogleMapsService.html",[85,1.308,151,0.552]],["body/injectables/GoogleMapsService.html",[2,0.353,3,0.353,7,0.244,19,0.586,20,0.047,21,0.545,22,0.297,23,0.147,30,0.7,38,0.028,39,0.028,52,2.036,83,1.982,84,1.982,85,1.606,95,1.682,104,1.818,111,1.907,131,1.818,135,3.613,137,1.129,141,0.476,142,0.996,144,1.001,145,1.025,149,1.025,150,1.424,151,0.788,154,1.472,163,3.033,164,1.761,167,1.805,168,3.925,169,2.82,170,2.82,171,1.001,172,1.982,173,1.982,174,1.982,175,4.398,176,2.439,177,2.439,178,0.889,179,0.996,180,0.889,181,3.469,182,2.439,183,2.439,184,3.469,185,1.982,186,2.439,187,2.439,188,2.439,189,2.439,190,2.439,191,2.439,192,2.439,193,2.439,194,2.439,195,2.439,196,2.439,197,2.439,198,2.439,199,2.439,200,3.469,201,3.469,202,2.439,203,3.469,204,2.439,205,1.982,206,2.439,207,2.439,208,2.439,209,2.439,210,2.439,211,2.439,212,2.439,213,2.439,214,2.439,215,2.439,216,2.439,217,1.682,218,2.439,219,2.439,220,2.439,221,2.439,222,2.439,223,2.439,224,2.439,225,2.439,226,2.439,227,2.439,228,2.439,229,2.439]],["title/interfaces/LocationProvider.html",[101,1.16,230,1.689]],["body/interfaces/LocationProvider.html",[2,0.415,3,0.415,7,0.287,9,1.258,19,0.656,20,0.046,22,0.349,30,0.824,36,1.115,38,0.031,39,0.031,45,1.416,101,1.594,141,0.56,142,1.115,145,0.728,149,0.986,150,1.594,178,1.046,179,1.518,180,1.605,230,2.32,231,2.678,232,2.332,233,1.797,234,3.253,235,2.678,236,2.678,237,3.035,238,3.834,239,3.253,240,2.678,241,2.869,242,2.818,243,2.023,244,2.678,245,2.678,246,2.818,247,2.818,248,2.678,249,2.32,250,1.978,251,1.978,252,2.32,253,2.678,254,3.156,255,3.156,256,3.156,257,2.662,258,1.714,259,1.328,260,1.797]],["title/components/LocatorComponent.html",[0,0.812,35,1.031]],["body/components/LocatorComponent.html",[0,1.336,1,0.605,2,0.24,3,0.24,4,1.144,5,1.144,6,1.144,7,0.166,9,0.842,11,1.144,12,2.718,13,2.355,15,1.793,17,1.793,19,0.706,20,0.047,21,0.371,22,0.202,23,0.1,24,0.768,25,1.793,26,2.883,27,1.793,28,2.718,29,1.144,30,0.921,31,1.144,32,0.605,33,0.87,34,1.144,35,1.323,36,1.132,37,1.144,38,0.021,39,0.021,43,0.992,45,1.169,53,0.992,73,0.992,85,1.68,86,1.144,87,1.144,101,1.49,111,1.067,137,1.204,138,2.606,141,0.324,142,0.747,143,2.95,144,1.49,145,1.149,148,1.793,149,0.66,150,1.316,151,0.324,164,1.864,167,1.618,171,1.49,178,0.605,179,1.132,180,0.605,217,2.503,233,1.204,239,1.793,242,1.554,243,1.909,246,1.554,247,2.704,257,2.29,258,0.992,259,0.768,260,1.484,261,1.144,262,2.6,263,2.6,264,2.6,265,4.37,266,2.29,267,2.95,268,1.659,269,3.206,270,3.629,271,4.524,272,3.629,273,3.629,274,2.6,275,3.206,276,3.629,277,2.6,278,1.659,279,2.6,280,1.659,281,1.659,282,2.6,283,3.206,284,1.659,285,1.144,286,1.349,287,3.206,288,1.659,289,1.659,290,1.659,291,1.349,292,1.659,293,1.349,294,1.659,295,1.659,296,1.659,297,1.659,298,1.659,299,1.659,300,2.6,301,1.659,302,1.659,303,1.659,304,2.6,305,3.206,306,2.6,307,3.206,308,2.6,309,1.659,310,1.659,311,1.349,312,1.659,313,1.659,314,1.659,315,1.659,316,1.659,317,1.659,318,1.659,319,1.659,320,1.659]],["title/injectables/LocatorMockService.html",[72,1.689,151,0.552]],["body/injectables/LocatorMockService.html",[2,0.344,3,0.344,7,0.238,9,1.104,19,0.735,20,0.047,21,0.531,22,0.289,23,0.144,30,0.683,36,0.979,38,0.027,39,0.027,45,0.868,72,2.037,73,1.422,101,1.399,137,1.101,141,0.464,142,0.979,144,1.889,145,1.104,149,1.169,151,0.777,154,1.586,165,1.641,171,0.977,178,0.868,179,1.449,180,0.868,231,3.174,233,1.578,234,2.351,235,2.351,236,2.351,237,2.747,242,2.599,243,2.024,244,2.351,245,2.351,246,3.015,247,3.114,248,2.351,249,2.037,257,2.731,258,1.422,259,1.101,260,1.101,266,2.087,321,2.771,322,3.408,323,2.771,324,3.535,325,3.408,326,2.379,327,3.408,328,1.422,329,1.934,330,2.379,331,2.771,332,1.934,333,1.934,334,1.934,335,2.037,336,1.934,337,2.037,338,1.934,339,1.641,340,1.934,341,1.934,342,1.934,343,2.379,344,2.379]],["title/injectables/LocatorService.html",[75,1.689,151,0.552]],["body/injectables/LocatorService.html",[2,0.275,3,0.275,7,0.191,9,0.936,19,0.747,20,0.047,21,0.425,22,0.232,23,0.115,30,0.83,36,1.121,38,0.023,39,0.023,45,1.274,59,1.312,73,1.137,75,1.727,101,1.186,104,0.997,111,1.186,137,0.881,141,0.371,142,0.83,144,1.434,145,0.991,149,1.166,150,1.186,151,0.682,154,1.423,164,0.694,171,1.186,178,1.054,179,1.48,180,1.423,185,1.547,233,1.338,234,1.993,235,1.993,236,1.993,237,2.41,238,3.411,239,2.894,240,1.993,242,2.508,243,1.814,244,1.993,245,1.993,246,2.64,247,2.953,248,1.993,249,1.727,250,1.312,251,1.312,252,1.727,253,1.993,254,2.35,255,2.35,256,2.35,257,2.589,258,1.137,259,0.881,260,1.618,266,1.831,321,2.35,323,2.35,324,3.172,328,1.137,329,1.547,331,2.35,332,1.547,333,1.547,334,1.547,335,1.137,336,1.547,337,1.137,338,1.547,339,1.312,340,1.547,341,1.547,342,1.547,345,1.547,346,1.903,347,3.903,348,2.89,349,2.41,350,1.903,351,1.903,352,1.547,353,1.547,354,2.89,355,1.903,356,1.903,357,1.903,358,1.547,359,2.89,360,2.89,361,2.89,362,1.903,363,1.312,364,1.903,365,1.903,366,1.903,367,1.903,368,1.903,369,1.903,370,2.35,371,1.903,372,1.903,373,1.903,374,1.547,375,1.903,376,1.903,377,1.547,378,1.903,379,1.903]],["title/classes/LoggingInterceptor.html",[23,0.171,80,1.689]],["body/classes/LoggingInterceptor.html",[2,0.407,3,0.407,7,0.282,9,1.242,19,0.737,20,0.047,22,0.343,23,0.232,30,0.809,38,0.031,39,0.031,59,1.942,80,2.291,81,2.644,82,2.644,111,1.156,137,1.775,141,0.55,142,1.101,145,0.715,149,1.107,154,1.59,164,1.027,178,1.027,179,0.809,180,1.027,250,2.644,252,2.291,253,2.644,257,2.285,259,1.303,260,1.775,311,3.117,349,3.228,352,2.289,353,3.805,358,2.289,363,3.007,370,2.289,377,2.289,380,3.117,381,2.289,382,4.36,383,4.68,384,3.834,385,4.202,386,4.68,387,2.816,388,3.834,389,3.834,390,3.834,391,3.834,392,2.816,393,2.816,394,2.289,395,1.942,396,2.816,397,2.816,398,2.816,399,2.816,400,2.816,401,2.816,402,2.289,403,3.117,404,2.816,405,2.816,406,2.816]],["title/classes/Main.html",[10,1.689,23,0.171]],["body/classes/Main.html",[2,0.185,3,0.185,7,0.211,9,0.415,10,3.053,14,1.042,19,0.629,20,0.047,22,0.156,23,0.189,30,0.368,33,1.107,36,0.368,38,0.017,39,0.017,40,0.368,81,1.457,82,1.457,104,1.107,107,1.457,111,0.526,125,2.835,131,1.107,132,0.884,141,0.412,142,0.607,144,1.106,145,1.253,148,1.457,149,1.297,150,1.283,154,1.964,164,0.77,167,1.283,171,0.526,178,0.467,179,0.607,180,0.467,205,2.54,217,0.884,233,0.978,251,0.884,252,1.262,260,0.593,266,2.408,267,2.81,285,1.457,328,0.766,335,0.766,337,0.766,339,1.858,349,2.565,363,2.938,385,3.024,394,3.463,395,1.858,402,1.042,407,1.042,408,3.026,409,3.125,410,3.125,411,3.125,412,3.125,413,3.457,414,3.457,415,3.457,416,3.457,417,3.457,418,3.457,419,3.457,420,2.713,421,3.934,422,2.112,423,2.112,424,3.567,425,1.281,426,3.125,427,1.281,428,1.281,429,1.281,430,1.281,431,1.281,432,2.112,433,2.54,434,1.281,435,2.112,436,2.112,437,1.281,438,1.281,439,2.112,440,1.281,441,2.112,442,2.112,443,2.19,444,2.19,445,1.281,446,2.112,447,2.112,448,1.717,449,1.281,450,1.281,451,1.281,452,1.281,453,2.112,454,1.281,455,1.281,456,1.042,457,3.457,458,2.112,459,1.281,460,1.281,461,2.694,462,1.281,463,1.281,464,1.281,465,2.112,466,1.281,467,1.281,468,1.281,469,1.281,470,2.112,471,1.281,472,1.281,473,1.281,474,1.281,475,1.281,476,1.281,477,1.281,478,1.281,479,1.281,480,1.281,481,1.281,482,1.281,483,1.281,484,1.281,485,1.281,486,1.281,487,1.281,488,1.281,489,1.281,490,1.281,491,1.281,492,1.281,493,1.281,494,1.281,495,1.281,496,1.281,497,1.281,498,1.281,499,2.112,500,1.281,501,1.281,502,1.281,503,1.281,504,1.281,505,1.281,506,1.281,507,1.281,508,1.281,509,1.281,510,1.281,511,2.112,512,2.112,513,1.281,514,1.281,515,1.281,516,1.281]],["title/classes/Place.html",[23,0.171,243,1.16]],["body/classes/Place.html",[2,0.393,3,0.393,7,0.272,9,0.88,20,0.047,22,0.33,23,0.226,30,1.074,38,0.03,39,0.03,141,0.53,145,1.269,149,1.269,150,1.535,154,1.681,178,1.364,179,1.324,180,1.364,233,1.732,240,3.851,243,2.102,266,2.619,328,1.623,335,3.201,337,3.201,424,4.062,517,2.208,518,4.61,519,4.61,520,2.716,521,2.716,522,2.716,523,2.716,524,2.716,525,2.716,526,2.716,527,2.716,528,2.716,529,2.716,530,3.741,531,2.716,532,3.741,533,2.716]],["title/coverage.html",[534,3.125]],["body/coverage.html",[0,1.303,1,1.111,7,0.305,8,2.477,10,1.821,20,0.046,23,0.274,32,1.111,35,1.111,38,0.033,39,0.033,52,1.411,72,1.821,75,1.821,78,3.129,80,1.821,85,1.411,101,1.251,105,2.102,109,1.821,134,2.477,151,0.982,152,2.477,153,2.477,161,1.821,162,2.102,163,2.788,164,1.111,165,2.788,167,1.251,171,1.251,174,2.477,179,0.875,230,1.821,231,2.788,232,2.477,243,1.251,261,2.788,345,2.477,374,4.517,380,2.477,381,2.477,407,2.477,517,2.477,534,2.477,535,3.048,536,3.048,537,4.538,538,4.833,539,4.043,540,3.048,541,3.048,542,3.048,543,3.048,544,3.048,545,4.043,546,3.048,547,3.333,548,3.048,549,3.048,550,2.477,551,2.477,552,2.477,553,3.048,554,3.048,555,2.477]],["title/dependencies.html",[42,1.78,556,2.367]],["body/dependencies.html",[20,0.047,21,0.783,38,0.036,39,0.036,42,1.837,62,3.346,63,3.053,65,2.094,67,2.849,68,2.849,125,2.417,259,1.622,291,2.849,408,2.417,433,2.849,443,2.849,444,2.849,456,2.849,557,3.505,558,5.64,559,3.505,560,3.505,561,3.505,562,3.505,563,3.505,564,3.505,565,3.505,566,3.505,567,3.505,568,3.505,569,3.505,570,3.505,571,3.505,572,3.505,573,3.505,574,3.505,575,3.505,576,3.505]],["title/index.html",[141,0.462,420,1.632,577,1.924]],["body/index.html",[13,2.724,20,0.042,36,1.055,38,0.037,39,0.037,131,1.925,132,2.533,161,2.724,164,1.339,167,1.507,249,2.195,293,2.985,448,2.985,555,2.985,578,3.673,579,3.673,580,4.558,581,4.558,582,4.558,583,3.705,584,4.558,585,5.183,586,3.673,587,4.558,588,4.956,589,3.705,590,3.143,591,3.673,592,3.673,593,3.673,594,3.673,595,3.673,596,3.673,597,3.673,598,3.673,599,3.673,600,4.558,601,3.673,602,3.673]],["title/license.html",[420,1.632,577,1.924,590,1.632]],["body/license.html",[7,0.324,20,0.034,38,0.034,39,0.034,45,1.182,55,1.936,129,2.903,161,1.936,403,2.634,408,2.235,589,3.422,590,2.235,603,3.241,604,4.676,605,3.241,606,3.241,607,3.241,608,3.241,609,4.21,610,3.241,611,3.241,612,3.241,613,3.241,614,4.21,615,3.241,616,4.95,617,5.486,618,3.241,619,4.21,620,4.676,621,3.241,622,4.676,623,3.241,624,3.241,625,3.241,626,3.241,627,3.241,628,3.241,629,3.241,630,3.241,631,3.241,632,3.241,633,3.241,634,3.241,635,3.241,636,3.241,637,4.21,638,4.21,639,3.241,640,3.241,641,4.21,642,3.241,643,3.241,644,3.241,645,3.241,646,3.241,647,3.241,648,3.241,649,3.241,650,3.241,651,3.241,652,3.241,653,3.241,654,3.241,655,3.241,656,3.241,657,3.241,658,3.241,659,3.241,660,3.241,661,3.241]],["title/modules.html",[40,1.104]],["body/modules.html",[20,0.04,38,0.04,39,0.04,40,1.217,41,2.221,51,2.221,63,3.427,118,2.532,583,4.039,662,4.969,663,5.272,664,4.237,665,4.237]],["title/overview.html",[666,3.125]],["body/overview.html",[0,0.978,1,2.019,20,0.045,22,0.414,23,0.206,24,1.576,32,1.745,35,1.745,38,0.035,39,0.035,40,1.248,41,2.959,42,1.784,43,2.035,44,2.348,45,1.241,46,2.768,47,2.768,48,2.768,49,2.768,50,2.768,51,2.509,52,2.216,53,2.597,54,2.348,55,2.035,118,3.236,119,2.768,120,2.768,151,0.665,230,2.035,666,2.768,667,4.787,668,3.405,669,3.405]],["title/miscellaneous/variables.html",[547,2.342,670,1.924]],["body/miscellaneous/variables.html",[20,0.046,36,1.391,38,0.036,39,0.036,78,3.908,104,2.539,141,0.682,167,1.989,179,1.462,261,2.409,285,3.341,286,3.938,395,3.699,547,2.409,550,2.84,551,2.84,552,2.84,670,2.84,671,3.493,672,3.493,673,3.493,674,3.493,675,5.091,676,4.845,677,3.493]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0.1.3",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["0.4.6",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":669,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":374,"title":{},"body":{"injectables/LocatorService.html":{},"coverage.html":{}}}],["1000",{"_index":208,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["10000",{"_index":342,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["12",{"_index":302,"title":{},"body":{"components/LocatorComponent.html":{}}}],["16/16",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["2.5.6",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["2.8.4",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":606,"title":{},"body":{"license.html":{}}}],["25",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":667,"title":{},"body":{"overview.html":{}}}],["3.30.8",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["3.74",{"_index":344,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["3/3",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["4.16.3",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":668,"title":{},"body":{"overview.html":{}}}],["50",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["51.07",{"_index":343,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["6.0.2",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":464,"title":{},"body":{"classes/Main.html":{}}}],["9/9",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["_app",{"_index":409,"title":{},"body":{"classes/Main.html":{}}}],["_browsern",{"_index":181,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["_currentposit",{"_index":324,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["_el",{"_index":270,"title":{},"body":{"components/LocatorComponent.html":{}}}],["_gmap",{"_index":269,"title":{},"body":{"components/LocatorComponent.html":{}}}],["_latitud",{"_index":518,"title":{},"body":{"classes/Place.html":{}}}],["_locationprovid",{"_index":275,"title":{},"body":{"components/LocatorComponent.html":{}}}],["_longitud",{"_index":519,"title":{},"body":{"classes/Place.html":{}}}],["_mapservic",{"_index":410,"title":{},"body":{"classes/Main.html":{}}}],["_render",{"_index":272,"title":{},"body":{"components/LocatorComponent.html":{}}}],["_server",{"_index":411,"title":{},"body":{"classes/Main.html":{}}}],["_set",{"_index":412,"title":{},"body":{"classes/Main.html":{}}}],["abov",{"_index":636,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":328,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["action",{"_index":656,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["add",{"_index":205,"title":{},"body":{"injectables/GoogleMapsService.html":{},"classes/Main.html":{}}}],["adddefaultrout",{"_index":413,"title":{},"body":{"classes/Main.html":{}}}],["addlogginginterceptor",{"_index":414,"title":{},"body":{"classes/Main.html":{}}}],["aizasyatjnu9fyoi3",{"_index":193,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["ajv",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["allow",{"_index":432,"title":{},"body":{"classes/Main.html":{}}}],["allowcor",{"_index":415,"title":{},"body":{"classes/Main.html":{}}}],["alreadi",{"_index":228,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["and/or",{"_index":629,"title":{},"body":{"license.html":{}}}],["angular/anim",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["angular/compil",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/servic",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":131,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"classes/Main.html":{},"index.html":{}}}],["app",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"classes/Main.html":{}}}],["app.compon",{"_index":127,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.modul",{"_index":126,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app.us",{"_index":476,"title":{},"body":{"classes/Main.html":{}}}],["app_rout",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["applic",{"_index":136,"title":{},"body":{"components/AppShellComponent.html":{}}}],["appmodul",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":51,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodul",{"_index":118,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appshellcompon",{"_index":32,"title":{"components/AppShellComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aris",{"_index":660,"title":{},"body":{"license.html":{}}}],["array",{"_index":287,"title":{},"body":{"components/LocatorComponent.html":{}}}],["associ",{"_index":618,"title":{},"body":{"license.html":{}}}],["async",{"_index":219,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["atm",{"_index":249,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"index.html":{}}}],["author",{"_index":649,"title":{},"body":{"license.html":{}}}],["avail",{"_index":665,"title":{},"body":{"modules.html":{}}}],["base",{"_index":245,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["befor",{"_index":591,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":199,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["brows",{"_index":663,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransit",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["browsernativeservic",{"_index":52,"title":{"injectables/BrowserNativeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsService.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":605,"title":{},"body":{"license.html":{}}}],["call",{"_index":253,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["callback=${gmapscallback",{"_index":225,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["catch(err",{"_index":298,"title":{},"body":{"components/LocatorComponent.html":{}}}],["charg",{"_index":613,"title":{},"body":{"license.html":{}}}],["claim",{"_index":652,"title":{},"body":{"license.html":{}}}],["class",{"_index":23,"title":{"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"coverage.html":{},"overview.html":{}}}],["cleartimeout(timeoutid",{"_index":209,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["client",{"_index":426,"title":{},"body":{"classes/Main.html":{}}}],["cluster_appmodul",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodul",{"_index":119,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":122,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_declar",{"_index":120,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_import",{"_index":121,"title":{},"body":{"modules/AppServerModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["compress",{"_index":442,"title":{},"body":{"classes/Main.html":{}}}],["condit",{"_index":635,"title":{},"body":{"license.html":{}}}],["config",{"_index":196,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["configur",{"_index":586,"title":{},"body":{"index.html":{}}}],["connect",{"_index":661,"title":{},"body":{"license.html":{}}}],["console.debug('googl",{"_index":210,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["console.debug('googlemapsservic",{"_index":186,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["console.debug('ne",{"_index":204,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["console.error('could",{"_index":207,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["console.error(err",{"_index":299,"title":{},"body":{"components/LocatorComponent.html":{}}}],["console.log",{"_index":311,"title":{},"body":{"components/LocatorComponent.html":{},"classes/LoggingInterceptor.html":{}}}],["console.log('serv",{"_index":512,"title":{},"body":{"classes/Main.html":{}}}],["console.log(`[${request.method",{"_index":471,"title":{},"body":{"classes/Main.html":{}}}],["console.log(`redirect",{"_index":508,"title":{},"body":{"classes/Main.html":{}}}],["console.log(`send",{"_index":482,"title":{},"body":{"classes/Main.html":{}}}],["console.log(err",{"_index":340,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["console.warn('googl",{"_index":227,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["const",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{}}}],["constructor(_browsern",{"_index":176,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["constructor(_locationprovid",{"_index":268,"title":{},"body":{"components/LocatorComponent.html":{}}}],["constructor(http",{"_index":346,"title":{},"body":{"injectables/LocatorService.html":{}}}],["constructor(priv",{"_index":185,"title":{},"body":{"injectables/GoogleMapsService.html":{},"injectables/LocatorService.html":{}}}],["constructor(set",{"_index":422,"title":{},"body":{"classes/Main.html":{}}}],["content",{"_index":448,"title":{},"body":{"classes/Main.html":{},"index.html":{}}}],["contract",{"_index":657,"title":{},"body":{"license.html":{}}}],["copi",{"_index":616,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":604,"title":{},"body":{"license.html":{}}}],["cor",{"_index":433,"title":{},"body":{"classes/Main.html":{},"dependencies.html":{}}}],["core",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":534,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":246,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["currentposit",{"_index":234,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["cédric",{"_index":607,"title":{},"body":{"license.html":{}}}],["damag",{"_index":653,"title":{},"body":{"license.html":{}}}],["data",{"_index":323,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["deal",{"_index":619,"title":{},"body":{"license.html":{}}}],["declar",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/LocatorComponent.html":{},"overview.html":{}}}],["decor",{"_index":281,"title":{},"body":{"components/LocatorComponent.html":{}}}],["default",{"_index":285,"title":{},"body":{"components/LocatorComponent.html":{},"classes/Main.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":220,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["defin",{"_index":145,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["demo",{"_index":588,"title":{},"body":{"index.html":{}}}],["depend",{"_index":42,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["destroy",{"_index":187,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["devic",{"_index":584,"title":{},"body":{"index.html":{}}}],["direct",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["distanc",{"_index":491,"title":{},"body":{"classes/Main.html":{}}}],["distribut",{"_index":627,"title":{},"body":{"license.html":{}}}],["doc",{"_index":601,"title":{},"body":{"index.html":{}}}],["document",{"_index":161,"title":{},"body":{"injectables/BrowserNativeService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentref",{"_index":188,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["documentref.body.appendchild(gmapsscript",{"_index":226,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["documentref.createelement('script",{"_index":214,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["documentref.getelementbyid('gmap",{"_index":202,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["download",{"_index":256,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{}}}],["dure",{"_index":255,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{}}}],["dynam",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["elementref",{"_index":271,"title":{},"body":{"components/LocatorComponent.html":{}}}],["elsland",{"_index":608,"title":{},"body":{"license.html":{}}}],["enabl",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsul",{"_index":262,"title":{},"body":{"components/LocatorComponent.html":{}}}],["end",{"_index":493,"title":{},"body":{"classes/Main.html":{}}}],["enforcehttp",{"_index":416,"title":{},"body":{"classes/Main.html":{}}}],["environ",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.loc",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.product",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":339,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{}}}],["event",{"_index":403,"title":{},"body":{"classes/LoggingInterceptor.html":{},"license.html":{}}}],["event.bodi",{"_index":379,"title":{},"body":{"injectables/LocatorService.html":{}}}],["event.load",{"_index":372,"title":{},"body":{"injectables/LocatorService.html":{}}}],["event.tot",{"_index":373,"title":{},"body":{"injectables/LocatorService.html":{}}}],["event.typ",{"_index":370,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["ex",{"_index":248,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["exchang",{"_index":388,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"overview.html":{}}}],["expos",{"_index":446,"title":{},"body":{"classes/Main.html":{}}}],["express",{"_index":408,"title":{},"body":{"classes/Main.html":{},"dependencies.html":{},"license.html":{}}}],["express.json",{"_index":485,"title":{},"body":{"classes/Main.html":{}}}],["fals",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"coverage.html":{},"license.html":{}}}],["filter",{"_index":357,"title":{},"body":{"injectables/LocatorService.html":{}}}],["filter(ev",{"_index":376,"title":{},"body":{"injectables/LocatorService.html":{}}}],["fine",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["fit",{"_index":645,"title":{},"body":{"license.html":{}}}],["folder",{"_index":597,"title":{},"body":{"index.html":{}}}],["follow",{"_index":634,"title":{},"body":{"license.html":{}}}],["forward",{"_index":502,"title":{},"body":{"classes/Main.html":{}}}],["free",{"_index":612,"title":{},"body":{"license.html":{}}}],["fs",{"_index":458,"title":{},"body":{"classes/Main.html":{}}}],["full",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":250,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["furnish",{"_index":632,"title":{},"body":{"license.html":{}}}],["get",{"_index":577,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcurrentposit",{"_index":329,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["getlatitud",{"_index":526,"title":{},"body":{"classes/Place.html":{}}}],["getlongitud",{"_index":522,"title":{},"body":{"classes/Place.html":{}}}],["getmapservic",{"_index":454,"title":{},"body":{"classes/Main.html":{}}}],["getnativedocu",{"_index":155,"title":{},"body":{"injectables/BrowserNativeService.html":{}}}],["getnativewindow",{"_index":156,"title":{},"body":{"injectables/BrowserNativeService.html":{}}}],["getnearbi",{"_index":235,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["getnearby('atm",{"_index":310,"title":{},"body":{"components/LocatorComponent.html":{}}}],["getnearby(typ",{"_index":236,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["getset",{"_index":451,"title":{},"body":{"classes/Main.html":{}}}],["given",{"_index":244,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["gmap",{"_index":217,"title":{},"body":{"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"classes/Main.html":{}}}],["gmaps.createcli",{"_index":466,"title":{},"body":{"classes/Main.html":{}}}],["gmapscallback",{"_index":197,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["gmapskey",{"_index":192,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["gmapsscript",{"_index":212,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["googl",{"_index":167,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"classes/Main.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.maps.map",{"_index":283,"title":{},"body":{"components/LocatorComponent.html":{}}}],["google.maps.map(this.gmap.nativeel",{"_index":301,"title":{},"body":{"components/LocatorComponent.html":{}}}],["google.maps.mark",{"_index":314,"title":{},"body":{"components/LocatorComponent.html":{}}}],["google/map",{"_index":456,"title":{},"body":{"classes/Main.html":{},"dependencies.html":{}}}],["googlemapsmockservic",{"_index":162,"title":{"injectables/GoogleMapsMockService.html":{}},"body":{"injectables/GoogleMapsMockService.html":{},"coverage.html":{}}}],["googlemapsservic",{"_index":85,"title":{"injectables/GoogleMapsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"coverage.html":{}}}],["grant",{"_index":611,"title":{},"body":{"license.html":{}}}],["graph",{"_index":664,"title":{},"body":{"modules.html":{}}}],["handle(req",{"_index":399,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["handler",{"_index":252,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["handov",{"_index":390,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["herebi",{"_index":610,"title":{},"body":{"license.html":{}}}],["holder",{"_index":650,"title":{},"body":{"license.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["htmlscriptel",{"_index":213,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["http",{"_index":349,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["http://[hostname]:[port",{"_index":599,"title":{},"body":{"index.html":{}}}],["http_interceptor",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":347,"title":{},"body":{"injectables/LocatorService.html":{}}}],["httpclientmodul",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":392,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["httpeventtyp",{"_index":352,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["httpeventtype.downloadprogress",{"_index":371,"title":{},"body":{"injectables/LocatorService.html":{}}}],["httpeventtype.respons",{"_index":377,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["httphandler",{"_index":386,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["httpinterceptor",{"_index":382,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["httprequest",{"_index":353,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["httprequest('post",{"_index":364,"title":{},"body":{"injectables/LocatorService.html":{}}}],["httprespons",{"_index":354,"title":{},"body":{"injectables/LocatorService.html":{}}}],["https://maps.googleapis.com/maps/api/j",{"_index":222,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["huh",{"_index":578,"title":{},"body":{"index.html":{}}}],["id",{"_index":216,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["identifi",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":396,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["implement",{"_index":137,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["impli",{"_index":643,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["includ",{"_index":622,"title":{},"body":{"license.html":{}}}],["index",{"_index":141,"title":{"index.html":{}},"body":{"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":481,"title":{},"body":{"classes/Main.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["init",{"_index":267,"title":{},"body":{"components/LocatorComponent.html":{},"classes/Main.html":{}}}],["initi",{"_index":148,"title":{},"body":{"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"classes/Main.html":{}}}],["initiali",{"_index":279,"title":{},"body":{"components/LocatorComponent.html":{}}}],["inject",{"_index":151,"title":{"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}},"body":{"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"coverage.html":{},"overview.html":{}}}],["inject('googlemapsservic",{"_index":295,"title":{},"body":{"components/LocatorComponent.html":{}}}],["inject('locationprovid",{"_index":294,"title":{},"body":{"components/LocatorComponent.html":{}}}],["instal",{"_index":585,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":383,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["intercept(req",{"_index":384,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["interceptor",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["interceptor.t",{"_index":381,"title":{},"body":{"classes/LoggingInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:15",{"_index":387,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["interceptorchain",{"_index":391,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["interfac",{"_index":230,"title":{"interfaces/LocationProvider.html":{}},"body":{"interfaces/LocationProvider.html":{},"coverage.html":{},"overview.html":{}}}],["it'",{"_index":579,"title":{},"body":{"index.html":{}}}],["js",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":367,"title":{},"body":{"injectables/LocatorService.html":{}}}],["json.parse(fs.readfilesync('settings.json",{"_index":462,"title":{},"body":{"classes/Main.html":{}}}],["key",{"_index":132,"title":{},"body":{"modules/AppServerModule.html":{},"classes/Main.html":{},"index.html":{}}}],["key=${gmapskey",{"_index":223,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["kind",{"_index":642,"title":{},"body":{"license.html":{}}}],["lat",{"_index":305,"title":{},"body":{"components/LocatorComponent.html":{}}}],["latitud",{"_index":335,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["latitude(latitud",{"_index":533,"title":{},"body":{"classes/Place.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"overview.html":{}}}],["liabil",{"_index":654,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":651,"title":{},"body":{"license.html":{}}}],["libraries=geometry,plac",{"_index":224,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["licens",{"_index":590,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":589,"title":{},"body":{"index.html":{},"license.html":{}}}],["listen",{"_index":513,"title":{},"body":{"classes/Main.html":{}}}],["lng",{"_index":307,"title":{},"body":{"components/LocatorComponent.html":{}}}],["load",{"_index":135,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{}}}],["locat",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppShellComponent.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locationprovid",{"_index":101,"title":{"interfaces/LocationProvider.html":{}},"body":{"modules/AppModule.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"coverage.html":{}}}],["locator.component.css",{"_index":263,"title":{},"body":{"components/LocatorComponent.html":{}}}],["locator.component.html",{"_index":264,"title":{},"body":{"components/LocatorComponent.html":{}}}],["locator/locator.compon",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["locatorcompon",{"_index":35,"title":{"components/LocatorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locatormockservic",{"_index":72,"title":{"injectables/LocatorMockService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocatorMockService.html":{},"coverage.html":{}}}],["locatorservic",{"_index":75,"title":{"injectables/LocatorService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocatorService.html":{},"coverage.html":{}}}],["log",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["logginginterceptor",{"_index":80,"title":{"classes/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"classes/LoggingInterceptor.html":{},"coverage.html":{}}}],["longitud",{"_index":337,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["longitude(longitud",{"_index":531,"title":{},"body":{"classes/Place.html":{}}}],["m",{"_index":195,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["main",{"_index":10,"title":{"classes/Main.html":{}},"body":{"components/AppComponent.html":{},"classes/Main.html":{},"coverage.html":{}}}],["make",{"_index":595,"title":{},"body":{"index.html":{}}}],["map",{"_index":164,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"coverage.html":{},"index.html":{}}}],["map((ev",{"_index":378,"title":{},"body":{"injectables/LocatorService.html":{}}}],["map(ev",{"_index":401,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["maps.servic",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleMapsMockService.html":{},"components/LocatorComponent.html":{}}}],["maps.service.t",{"_index":174,"title":{},"body":{"injectables/GoogleMapsService.html":{},"coverage.html":{}}}],["maps.service.ts:16",{"_index":182,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["maps.service.ts:5",{"_index":177,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["maps.service.ts:9",{"_index":183,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["mapservic",{"_index":453,"title":{},"body":{"classes/Main.html":{}}}],["marker",{"_index":265,"title":{},"body":{"components/LocatorComponent.html":{}}}],["marker.addlistener('click",{"_index":315,"title":{},"body":{"components/LocatorComponent.html":{}}}],["marker.getposit",{"_index":317,"title":{},"body":{"components/LocatorComponent.html":{}}}],["match",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maximumag",{"_index":341,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["merchant",{"_index":644,"title":{},"body":{"license.html":{}}}],["merg",{"_index":625,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["method",{"_index":142,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["miscellan",{"_index":670,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":603,"title":{},"body":{"license.html":{}}}],["mock",{"_index":322,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["mock.servic",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.service.t",{"_index":165,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/LocatorMockService.html":{},"coverage.html":{}}}],["mock.service.ts:10",{"_index":166,"title":{},"body":{"injectables/GoogleMapsMockService.html":{}}}],["mock.service.ts:15",{"_index":325,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["mock.service.ts:37",{"_index":326,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["mock.service.ts:46",{"_index":330,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["modifi",{"_index":624,"title":{},"body":{"license.html":{}}}],["modul",{"_index":40,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"classes/Main.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["native.servic",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleMapsService.html":{}}}],["native.service.t",{"_index":153,"title":{},"body":{"injectables/BrowserNativeService.html":{},"coverage.html":{}}}],["native.service.ts:12",{"_index":158,"title":{},"body":{"injectables/BrowserNativeService.html":{}}}],["native.service.ts:4",{"_index":157,"title":{},"body":{"injectables/BrowserNativeService.html":{}}}],["native.service.ts:8",{"_index":159,"title":{},"body":{"injectables/BrowserNativeService.html":{}}}],["navig",{"_index":598,"title":{},"body":{"index.html":{}}}],["navigator.geolocation.watchposit",{"_index":333,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["nearbi",{"_index":242,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["necessari",{"_index":169,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{}}}],["need",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"coverage.html":{}}}],["next",{"_index":385,"title":{},"body":{"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["nextfunct",{"_index":457,"title":{},"body":{"classes/Main.html":{}}}],["ngmodul",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["ngondestroy",{"_index":175,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["ngoninit",{"_index":143,"title":{},"body":{"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["noninfring",{"_index":648,"title":{},"body":{"license.html":{}}}],["notic",{"_index":637,"title":{},"body":{"license.html":{}}}],["npm",{"_index":593,"title":{},"body":{"index.html":{}}}],["number",{"_index":240,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{},"classes/Place.html":{}}}],["object",{"_index":395,"title":{},"body":{"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"miscellaneous/variables.html":{}}}],["object.assign(gmapsscript",{"_index":215,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["observ",{"_index":257,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["observable((observ",{"_index":332,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["observer.next",{"_index":334,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["obtain",{"_index":615,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":184,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["ongooglemapsload",{"_index":198,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["oninit",{"_index":138,"title":{},"body":{"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["onprogresschang",{"_index":238,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{}}}],["onprogresschanged(progress",{"_index":375,"title":{},"body":{"injectables/LocatorService.html":{}}}],["opennow",{"_index":487,"title":{},"body":{"classes/Main.html":{}}}],["option",{"_index":180,"title":{},"body":{"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["otherwis",{"_index":659,"title":{},"body":{"license.html":{}}}],["out",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":666,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":556,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":260,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["paramet",{"_index":178,"title":{},"body":{"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["particular",{"_index":646,"title":{},"body":{"license.html":{}}}],["path",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["pathmatch",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permiss",{"_index":609,"title":{},"body":{"license.html":{}}}],["permit",{"_index":631,"title":{},"body":{"license.html":{}}}],["person",{"_index":614,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":400,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["place",{"_index":243,"title":{"classes/Place.html":{}},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Place.html":{},"coverage.html":{}}}],["place.geometry.location.lat",{"_index":496,"title":{},"body":{"classes/Main.html":{}}}],["place.geometry.location.lng",{"_index":495,"title":{},"body":{"classes/Main.html":{}}}],["place.latitud",{"_index":306,"title":{},"body":{"components/LocatorComponent.html":{}}}],["place.longitud",{"_index":308,"title":{},"body":{"components/LocatorComponent.html":{}}}],["places.map((plac",{"_index":313,"title":{},"body":{"components/LocatorComponent.html":{}}}],["pleas",{"_index":592,"title":{},"body":{"index.html":{}}}],["port",{"_index":514,"title":{},"body":{"classes/Main.html":{}}}],["portion",{"_index":640,"title":{},"body":{"license.html":{}}}],["posit",{"_index":247,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["position.coords.latitud",{"_index":336,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["position.coords.longitud",{"_index":338,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["position.lat",{"_index":318,"title":{},"body":{"components/LocatorComponent.html":{}}}],["position.lng",{"_index":319,"title":{},"body":{"components/LocatorComponent.html":{}}}],["post>('/nearbi",{"_index":362,"title":{},"body":{"injectables/LocatorService.html":{}}}],["prerequisit",{"_index":580,"title":{},"body":{"index.html":{}}}],["present",{"_index":229,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["privat",{"_index":266,"title":{},"body":{"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["product",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":239,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorService.html":{}}}],["project",{"_index":581,"title":{},"body":{"index.html":{}}}],["promis",{"_index":170,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{}}}],["promise((resolv",{"_index":172,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{}}}],["properti",{"_index":233,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["proto",{"_index":503,"title":{},"body":{"classes/Main.html":{}}}],["provid",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"license.html":{},"overview.html":{}}}],["provider.t",{"_index":232,"title":{},"body":{"interfaces/LocationProvider.html":{},"coverage.html":{}}}],["provider.ts:22",{"_index":241,"title":{},"body":{"interfaces/LocationProvider.html":{}}}],["public",{"_index":154,"title":{},"body":{"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["publish",{"_index":626,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":647,"title":{},"body":{"license.html":{}}}],["rankbi",{"_index":490,"title":{},"body":{"classes/Main.html":{}}}],["ray",{"_index":444,"title":{},"body":{"classes/Main.html":{},"dependencies.html":{}}}],["re",{"_index":402,"title":{},"body":{"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["read",{"_index":293,"title":{},"body":{"components/LocatorComponent.html":{},"index.html":{}}}],["real",{"_index":327,"title":{},"body":{"injectables/LocatorMockService.html":{}}}],["redirect",{"_index":475,"title":{},"body":{"classes/Main.html":{}}}],["redirectto",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":276,"title":{},"body":{"components/LocatorComponent.html":{}}}],["regist",{"_index":439,"title":{},"body":{"classes/Main.html":{}}}],["registerapihandl",{"_index":417,"title":{},"body":{"classes/Main.html":{}}}],["reject",{"_index":200,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["remark",{"_index":393,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["render",{"_index":277,"title":{},"body":{"components/LocatorComponent.html":{}}}],["renderer2",{"_index":273,"title":{},"body":{"components/LocatorComponent.html":{}}}],["reportprogress",{"_index":365,"title":{},"body":{"injectables/LocatorService.html":{}}}],["req",{"_index":389,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["req,r",{"_index":477,"title":{},"body":{"classes/Main.html":{}}}],["req.method",{"_index":397,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["req.url",{"_index":398,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["request",{"_index":363,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["request.body.loc",{"_index":489,"title":{},"body":{"classes/Main.html":{}}}],["request.body.typ",{"_index":488,"title":{},"body":{"classes/Main.html":{}}}],["request.get('host",{"_index":506,"title":{},"body":{"classes/Main.html":{}}}],["request.headers['x",{"_index":501,"title":{},"body":{"classes/Main.html":{}}}],["request.path",{"_index":473,"title":{},"body":{"classes/Main.html":{}}}],["request.protocol",{"_index":472,"title":{},"body":{"classes/Main.html":{}}}],["request.secur",{"_index":500,"title":{},"body":{"classes/Main.html":{}}}],["request.url].join",{"_index":507,"title":{},"body":{"classes/Main.html":{}}}],["request>(request",{"_index":368,"title":{},"body":{"injectables/LocatorService.html":{}}}],["require.main",{"_index":516,"title":{},"body":{"classes/Main.html":{}}}],["res.pipe(respons",{"_index":492,"title":{},"body":{"classes/Main.html":{}}}],["res.redirect",{"_index":478,"title":{},"body":{"classes/Main.html":{}}}],["res.statu",{"_index":405,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["res.statustext",{"_index":406,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["res.url",{"_index":404,"title":{},"body":{"classes/LoggingInterceptor.html":{}}}],["reset",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["resolve(fals",{"_index":173,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{}}}],["resolve(tru",{"_index":211,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["respons",{"_index":394,"title":{},"body":{"classes/LoggingInterceptor.html":{},"classes/Main.html":{}}}],["response.redirect(['http",{"_index":505,"title":{},"body":{"classes/Main.html":{}}}],["response.send(res.json.results.map(plac",{"_index":494,"title":{},"body":{"classes/Main.html":{}}}],["response.sendfile(__dirnam",{"_index":480,"title":{},"body":{"classes/Main.html":{}}}],["response.sendstatus(500",{"_index":498,"title":{},"body":{"classes/Main.html":{}}}],["response.statuscod",{"_index":474,"title":{},"body":{"classes/Main.html":{}}}],["response.statusmessag",{"_index":497,"title":{},"body":{"classes/Main.html":{}}}],["responsetyp",{"_index":366,"title":{},"body":{"injectables/LocatorService.html":{}}}],["restrict",{"_index":621,"title":{},"body":{"license.html":{}}}],["result",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":149,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["ridirect",{"_index":435,"title":{},"body":{"classes/Main.html":{}}}],["right",{"_index":623,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/Main.html":{}}}],["root'},{'nam",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["rout",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"classes/Main.html":{}}}],["routermodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":133,"title":{},"body":{"modules/AppServerModule.html":{}}}],["routing.modul",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rupeez",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{},"index.html":{}}}],["rupeez/app",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rupeez/app.compon",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["rupeez/brows",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleMapsService.html":{}}}],["rupeez/googl",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleMapsMockService.html":{},"components/LocatorComponent.html":{}}}],["rupeez/loc",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["rupeez/locator.servic",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["rupeez/locator/locator.compon",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["rupeez/plac",{"_index":258,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["rupeezconfigur",{"_index":594,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":259,"title":{},"body":{"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":358,"title":{},"body":{"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{}}}],["s2qzqmkne3ls_ecbuzc",{"_index":194,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["screenshot",{"_index":602,"title":{},"body":{"index.html":{}}}],["script",{"_index":168,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{}}}],["secur",{"_index":499,"title":{},"body":{"classes/Main.html":{}}}],["see",{"_index":600,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["sell",{"_index":630,"title":{},"body":{"license.html":{}}}],["server",{"_index":125,"title":{},"body":{"modules/AppServerModule.html":{},"classes/Main.html":{},"dependencies.html":{}}}],["serverapp",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodul",{"_index":124,"title":{},"body":{"modules/AppServerModule.html":{}}}],["servic",{"_index":321,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["serviceworkermodul",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('/ngsw",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":424,"title":{},"body":{"classes/Main.html":{},"classes/Place.html":{}}}],["setlatitude(latitud",{"_index":528,"title":{},"body":{"classes/Place.html":{}}}],["setlongitude(longitud",{"_index":524,"title":{},"body":{"classes/Place.html":{}}}],["settimeout",{"_index":206,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["settings.json",{"_index":596,"title":{},"body":{"index.html":{}}}],["setup",{"_index":441,"title":{},"body":{"classes/Main.html":{}}}],["setupcompress",{"_index":418,"title":{},"body":{"classes/Main.html":{}}}],["setupstaticcont",{"_index":419,"title":{},"body":{"classes/Main.html":{}}}],["shall",{"_index":638,"title":{},"body":{"license.html":{}}}],["shell",{"_index":128,"title":{},"body":{"modules/AppServerModule.html":{},"components/AppShellComponent.html":{}}}],["shell'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["shell.compon",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["shell.component.css",{"_index":139,"title":{},"body":{"components/AppShellComponent.html":{}}}],["shell.component.html",{"_index":140,"title":{},"body":{"components/AppShellComponent.html":{}}}],["shell.component.t",{"_index":134,"title":{},"body":{"components/AppShellComponent.html":{},"coverage.html":{}}}],["shell.component.ts:11",{"_index":146,"title":{},"body":{"components/AppShellComponent.html":{}}}],["shell.component.ts:21",{"_index":147,"title":{},"body":{"components/AppShellComponent.html":{}}}],["shell/app",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"coverage.html":{}}}],["shrink",{"_index":443,"title":{},"body":{"classes/Main.html":{},"dependencies.html":{}}}],["shrinkray",{"_index":459,"title":{},"body":{"classes/Main.html":{}}}],["softwar",{"_index":617,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"injectables/BrowserNativeService.html":{},"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["src",{"_index":221,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["src/.../environment.prod.t",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.stg.t",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../locator.component.t",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppShellComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.server.module.t",{"_index":123,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/brows",{"_index":152,"title":{},"body":{"injectables/BrowserNativeService.html":{},"coverage.html":{}}}],["src/app/googl",{"_index":163,"title":{},"body":{"injectables/GoogleMapsMockService.html":{},"injectables/GoogleMapsService.html":{},"coverage.html":{}}}],["src/app/loc",{"_index":231,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"coverage.html":{}}}],["src/app/locator.service.t",{"_index":345,"title":{},"body":{"injectables/LocatorService.html":{},"coverage.html":{}}}],["src/app/locator.service.ts:17",{"_index":348,"title":{},"body":{"injectables/LocatorService.html":{}}}],["src/app/locator.service.ts:42",{"_index":350,"title":{},"body":{"injectables/LocatorService.html":{}}}],["src/app/locator.service.ts:73",{"_index":351,"title":{},"body":{"injectables/LocatorService.html":{}}}],["src/app/locator/locator.component.t",{"_index":261,"title":{},"body":{"components/LocatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/locator/locator.component.ts:23",{"_index":284,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/locator/locator.component.ts:28",{"_index":288,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/locator/locator.component.ts:33",{"_index":290,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/locator/locator.component.ts:38",{"_index":289,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/locator/locator.component.ts:44",{"_index":274,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/locator/locator.component.ts:63",{"_index":280,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/locator/locator.component.ts:72",{"_index":278,"title":{},"body":{"components/LocatorComponent.html":{}}}],["src/app/log",{"_index":380,"title":{},"body":{"classes/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/app/place.t",{"_index":517,"title":{},"body":{"classes/Place.html":{},"coverage.html":{}}}],["src/app/place.ts:14",{"_index":520,"title":{},"body":{"classes/Place.html":{}}}],["src/app/place.ts:19",{"_index":523,"title":{},"body":{"classes/Place.html":{}}}],["src/app/place.ts:26",{"_index":525,"title":{},"body":{"classes/Place.html":{}}}],["src/app/place.ts:33",{"_index":527,"title":{},"body":{"classes/Place.html":{}}}],["src/app/place.ts:40",{"_index":529,"title":{},"body":{"classes/Place.html":{}}}],["src/app/place.ts:9",{"_index":521,"title":{},"body":{"classes/Place.html":{}}}],["src/environments/environment.prod.t",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.stg.t",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server/main.t",{"_index":407,"title":{},"body":{"classes/Main.html":{},"coverage.html":{}}}],["src/server/main.ts:108",{"_index":429,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:122",{"_index":445,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:131",{"_index":438,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:16",{"_index":425,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:161",{"_index":434,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:179",{"_index":449,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:187",{"_index":450,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:21",{"_index":427,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:26",{"_index":428,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:31",{"_index":423,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:53",{"_index":452,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:60",{"_index":455,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:67",{"_index":437,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:81",{"_index":440,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:89",{"_index":431,"title":{},"body":{"classes/Main.html":{}}}],["src/server/main.ts:96",{"_index":430,"title":{},"body":{"classes/Main.html":{}}}],["stage",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":420,"title":{"index.html":{},"license.html":{}},"body":{"classes/Main.html":{}}}],["statement",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":447,"title":{},"body":{"classes/Main.html":{}}}],["statu",{"_index":582,"title":{},"body":{"index.html":{}}}],["stop",{"_index":421,"title":{},"body":{"classes/Main.html":{}}}],["string",{"_index":237,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["subject",{"_index":633,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":628,"title":{},"body":{"license.html":{}}}],["subscribe((plac",{"_index":312,"title":{},"body":{"components/LocatorComponent.html":{}}}],["substanti",{"_index":639,"title":{},"body":{"license.html":{}}}],["support",{"_index":583,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":662,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":355,"title":{},"body":{"injectables/LocatorService.html":{}}}],["switchmap(posit",{"_index":360,"title":{},"body":{"injectables/LocatorService.html":{}}}],["tabl",{"_index":555,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":356,"title":{},"body":{"injectables/LocatorService.html":{}}}],["tap(ev",{"_index":369,"title":{},"body":{"injectables/LocatorService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["text/javascript",{"_index":218,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["there'",{"_index":254,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{}}}],["this._app",{"_index":460,"title":{},"body":{"classes/Main.html":{}}}],["this._app.listen(process.env.port",{"_index":510,"title":{},"body":{"classes/Main.html":{}}}],["this._app.post('/nearbi",{"_index":484,"title":{},"body":{"classes/Main.html":{}}}],["this._app.us",{"_index":479,"title":{},"body":{"classes/Main.html":{}}}],["this._app.use((request",{"_index":470,"title":{},"body":{"classes/Main.html":{}}}],["this._app.use(cor",{"_index":469,"title":{},"body":{"classes/Main.html":{}}}],["this._app.use(express.static(__dirnam",{"_index":483,"title":{},"body":{"classes/Main.html":{}}}],["this._app.use(shrinkray",{"_index":468,"title":{},"body":{"classes/Main.html":{}}}],["this._browsernative.getnativedocu",{"_index":189,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["this._browsernative.getnativewindow",{"_index":191,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["this._currentposit",{"_index":331,"title":{},"body":{"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{}}}],["this._currentposition.pip",{"_index":359,"title":{},"body":{"injectables/LocatorService.html":{}}}],["this._gmaps.load",{"_index":296,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this._latitud",{"_index":532,"title":{},"body":{"classes/Place.html":{}}}],["this._locationprovid",{"_index":309,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this._locationprovider.currentposition.subscribe((plac",{"_index":303,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this._longitud",{"_index":530,"title":{},"body":{"classes/Place.html":{}}}],["this._mapservic",{"_index":465,"title":{},"body":{"classes/Main.html":{}}}],["this._mapservice.placesnearbi",{"_index":486,"title":{},"body":{"classes/Main.html":{}}}],["this._serv",{"_index":509,"title":{},"body":{"classes/Main.html":{}}}],["this._server.clos",{"_index":515,"title":{},"body":{"classes/Main.html":{}}}],["this._set",{"_index":461,"title":{},"body":{"classes/Main.html":{}}}],["this._settings.googlemapsapikey",{"_index":467,"title":{},"body":{"classes/Main.html":{}}}],["this._settings.http",{"_index":504,"title":{},"body":{"classes/Main.html":{}}}],["this._settings.port",{"_index":511,"title":{},"body":{"classes/Main.html":{}}}],["this.http",{"_index":361,"title":{},"body":{"injectables/LocatorService.html":{}}}],["this.init",{"_index":297,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this.map",{"_index":300,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this.map.setcent",{"_index":304,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this.map.setzoom(14",{"_index":316,"title":{},"body":{"components/LocatorComponent.html":{}}}],["this.markers.push(mark",{"_index":320,"title":{},"body":{"components/LocatorComponent.html":{}}}],["timeoutid",{"_index":201,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["todo",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/GoogleMapsService.html":{}}}],["tort",{"_index":658,"title":{},"body":{"license.html":{}}}],["traffic",{"_index":436,"title":{},"body":{"classes/Main.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleMapsService.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"miscellaneous/variables.html":{}}}],["tune",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":179,"title":{},"body":{"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorMockService.html":{},"injectables/LocatorService.html":{},"classes/LoggingInterceptor.html":{},"classes/Main.html":{},"classes/Place.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/googlemap",{"_index":291,"title":{},"body":{"components/LocatorComponent.html":{},"dependencies.html":{}}}],["univers",{"_index":130,"title":{},"body":{"modules/AppServerModule.html":{}}}],["us",{"_index":129,"title":{},"body":{"modules/AppServerModule.html":{},"components/AppShellComponent.html":{},"license.html":{}}}],["usag",{"_index":587,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["utf",{"_index":463,"title":{},"body":{"classes/Main.html":{}}}],["valu",{"_index":286,"title":{},"body":{"components/LocatorComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AppShellComponent.html":{},"components/LocatorComponent.html":{}}}],["variabl",{"_index":547,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":282,"title":{},"body":{"components/LocatorComponent.html":{}}}],["viewchild('gmap",{"_index":292,"title":{},"body":{"components/LocatorComponent.html":{}}}],["void",{"_index":150,"title":{},"body":{"components/AppShellComponent.html":{},"injectables/GoogleMapsService.html":{},"interfaces/LocationProvider.html":{},"components/LocatorComponent.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{},"classes/Place.html":{}}}],["warranti",{"_index":641,"title":{},"body":{"license.html":{}}}],["whether",{"_index":655,"title":{},"body":{"license.html":{}}}],["window",{"_index":160,"title":{},"body":{"injectables/BrowserNativeService.html":{}}}],["windowref",{"_index":190,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["windowref[gmapscallback",{"_index":203,"title":{},"body":{"injectables/GoogleMapsService.html":{}}}],["without",{"_index":620,"title":{},"body":{"license.html":{}}}],["worker",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.j",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["ye",{"_index":251,"title":{},"body":{"interfaces/LocationProvider.html":{},"injectables/LocatorService.html":{},"classes/Main.html":{}}}],["zone.j",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/LocatorComponent.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rupeez-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main Component\n */\n@Component({\n  selector: 'rupeez-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'rupeez-root'},{'name': 'AppShellComponent', 'selector': 'rupeez-app-shell'},{'name': 'LocatorComponent', 'selector': 'rupeez-locator'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLocatorComponent\n\nLocatorComponent\n\nAppModule -->\n\nLocatorComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBrowserNativeService\n\nBrowserNativeService\n\nAppModule -->\n\nBrowserNativeService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LocatorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     BrowserNativeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { AppRoutingModule } from '@rupeez/app-routing.module';\nimport { AppComponent } from '@rupeez/app.component';\nimport { LocatorMockService } from '@rupeez/locator-mock.service';\nimport { LocatorService } from '@rupeez/locator.service';\nimport { LocatorComponent } from '@rupeez/locator/locator.component';\n\nimport { environment } from '../environments/environment';\nimport { LoggingInterceptor } from './logging-interceptor';\nimport { BrowserNativeService } from '@rupeez/browser-native.service';\nimport { GoogleMapsService } from '@rupeez/google-maps.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LocatorComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }), // TODO: need to fine tune sw\n    RouterModule\n  ],\n  providers: [\n    {\n      provide: 'GoogleMapsService',\n      useClass: GoogleMapsService\n    },\n    BrowserNativeService,\n    {\n      provide: 'LocationProvider',\n      useClass: environment.location ? LocatorService : LocatorMockService\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoggingInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LocatorComponent } from './locator/locator.component';\nimport { AppShellComponent } from '@rupeez/app-shell/app-shell.component';\n\nconst APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: '/locator',\n    pathMatch: 'full'\n  },\n  {\n    path: 'locator',\n    component: LocatorComponent\n  }/*,\n  {\n    path: '**',\n    redirectTo: '/locator',\n    pathMatch: 'full'\n  }*/\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n  Modules\n  AppServerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_declarations\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppShellComponent\n\nAppShellComponent\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppShellComponent->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppShellComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppShellComponent } from './app-shell/app-shell.component';\n\nconst routes: Routes = [ { path: 'shell', component: AppShellComponent }];\n\n// TODO: use universal for API key\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    RouterModule.forRoot(routes)\n  ],\n  bootstrap: [AppComponent],\n  declarations: [AppShellComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppShellComponent.html":{"url":"components/AppShellComponent.html","title":"component - AppShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app-shell/app-shell.component.ts\n\n\n    \n        Description\n    \n    \n        The Shell Component used when loading application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rupeez-app-shell\n            \n\n            \n                styleUrls\n                app-shell.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-shell.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app-shell/app-shell.component.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-shell/app-shell.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            Initialize Component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * The Shell Component used when loading application\n */\n@Component({\n  selector: 'rupeez-app-shell',\n  templateUrl: './app-shell.component.html',\n  styleUrls: ['./app-shell.component.css']\n})\nexport class AppShellComponent implements OnInit {\n\n  /**\n   * Constructor\n   */\n  constructor() { }\n\n  /**\n   * Initialize Component\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'rupeez-root'},{'name': 'AppShellComponent', 'selector': 'rupeez-app-shell'},{'name': 'LocatorComponent', 'selector': 'rupeez-locator'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserNativeService.html":{"url":"injectables/BrowserNativeService.html","title":"injectable - BrowserNativeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BrowserNativeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/browser-native.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNativeDocument\n                            \n                            \n                                    Public\n                                getNativeWindow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/browser-native.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNativeDocument\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNativeDocument()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/browser-native.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNativeWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNativeWindow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/browser-native.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserNativeService {\n\n  constructor() { }\n\n  public getNativeWindow(): any {\n    return window;\n  }\n\n  public getNativeDocument(): any {\n    return document;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsMockService.html":{"url":"injectables/GoogleMapsMockService.html","title":"injectable - GoogleMapsMockService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsMockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/google-maps-mock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/google-maps-mock.service.ts:10\n                            \n                        \n\n\n                \n                    \n                            This will load the Google Maps API script (if necessary)\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GoogleMapsService } from '@rupeez/google-maps.service';\n\n@Injectable()\nexport class GoogleMapsMockService {\n\n  /**\n   * This will load the Google Maps API script (if necessary)\n   */\n  public load(): Promise {\n\n    return new Promise((resolve) => {\n      resolve(false);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsService.html":{"url":"injectables/GoogleMapsService.html","title":"injectable - GoogleMapsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/google-maps.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_browserNative: BrowserNativeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/google-maps.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _browserNative\n                                                  \n                                                        \n                                                                    BrowserNativeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/google-maps.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            This will load the Google Maps API script (if necessary)\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/google-maps.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { BrowserNativeService } from '@rupeez/browser-native.service';\n\n@Injectable()\nexport class GoogleMapsService implements OnDestroy {\n\n  constructor(private _browserNative: BrowserNativeService) {}\n\n  ngOnDestroy() {\n    // console.debug('GoogleMapsService destroy');\n  }\n\n  /**\n   * This will load the Google Maps API script (if necessary)\n   */\n  public load(): Promise {\n    const documentRef = this._browserNative.getNativeDocument();\n    const windowRef = this._browserNative.getNativeWindow();\n\n    const gmapsKey = 'AIzaSyATJnu9FYOi3-s2QZqmKne3LS_ECbUzc-M'; // TODO: load from config\n    const gmapsCallback = 'onGoogleMapsLoaded';\n\n    return new Promise((resolve: (loaded: boolean) => void, reject) => {\n      // let timeoutId;\n\n      // if (!documentRef.getElementById('gmaps')) {\n      if (!windowRef[gmapsCallback]) {\n        // console.debug('need to add google maps script');\n\n        /*\n        timeoutId = setTimeout(() => {\n          console.error('could not load google maps script');\n          reject();\n        }, 1000);\n        */\n\n        windowRef[gmapsCallback] = () => {\n          // clearTimeout(timeoutId);\n          // console.debug('google maps script loaded');\n          resolve(true);\n        };\n\n        const gmapsScript: HTMLScriptElement = documentRef.createElement('script');\n\n        Object.assign(gmapsScript, {\n          id: 'gmaps',\n          type: 'text/javascript',\n          async: true,\n          defer: true,\n          src: 'https://maps.googleapis.com/maps/api/js?' +\n                `key=${gmapsKey}&` +\n                `libraries=geometry,places&` +\n                `callback=${gmapsCallback}`\n        });\n\n        documentRef.body.appendChild(gmapsScript);\n      } else {\n        console.warn('google maps script already present');\n        resolve(false);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationProvider.html":{"url":"interfaces/LocationProvider.html","title":"interface - LocationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location-provider.ts\n        \n\n            \n                Description\n            \n            \n                Provider for Location\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentPosition\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getNearby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNearby\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNearby(type: string, onProgressChanged?: (progress?: number) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location-provider.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get nearby places for the given type, based on your current position.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The type (ex: ATM)\n\n                                                        \n                                                \n                                                \n                                                        onProgressChanged\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional handler to be called when there's some progress during download\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    The places nearby\n\n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPosition\n                                    \n                                \n                                \n                                    \n                                        currentPosition:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Get the current position\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Place } from '@rupeez/place';\nimport { Observable } from 'rxjs';\n\n/**\n * Provider for Location\n */\nexport interface LocationProvider {\n\n    /**\n     * Get the current position\n     */\n    currentPosition: Observable;\n\n    /**\n     * Get nearby places for the given type, based on your current position.\n     *\n     * @param type The type (ex: ATM)\n     * @param onProgressChanged Optional handler to be called when there's some progress during download\n     *\n     * @returns The places nearby\n     */\n    getNearby(type: string, onProgressChanged?: (progress: number) => void): Observable>;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocatorComponent.html":{"url":"components/LocatorComponent.html","title":"component - LocatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/locator/locator.component.ts\n\n\n    \n        Description\n    \n    \n        Component that encapsulates a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rupeez-locator\n            \n\n            \n                styleUrls\n                locator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./locator.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gmap\n                            \n                            \n                                map\n                            \n                            \n                                markers\n                            \n                            \n                                places\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_locationProvider: LocationProvider, _gmaps: GoogleMapsService, _el: ElementRef, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/locator/locator.component.ts:44\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _locationProvider\n                                                  \n                                                        \n                                                                    LocationProvider\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Location Provider\n\n                                                        \n                                                \n                                                \n                                                        _gmaps\n                                                  \n                                                        \n                                                                    GoogleMapsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        _el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Element Reference\n\n                                                        \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Renderer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Initialialize map\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Initialize component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gmap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gmap:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:44\n                            \n                        \n\n                \n                    \n                        Reference to the Google Map element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     google.maps.Map\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:23\n                            \n                        \n\n                \n                    \n                        Google Map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markers:     \n\n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:28\n                            \n                        \n\n                \n                    \n                        Markers on the map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        places:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:38\n                            \n                        \n\n                \n                    \n                        The places nearby\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator/locator.component.ts:33\n                            \n                        \n\n                \n                    \n                        Current position\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { GoogleMapsService } from '@rupeez/google-maps.service';\nimport { LocationProvider } from '@rupeez/location-provider';\nimport { Place } from '@rupeez/place';\nimport { Observable } from 'rxjs';\nimport {} from '@types/googlemaps';\n\ndeclare var google: any;\n\n/**\n * Component that encapsulates a map\n */\n@Component({\n  selector: 'rupeez-locator',\n  templateUrl: './locator.component.html',\n  styleUrls: ['./locator.component.css']\n})\nexport class LocatorComponent implements OnInit {\n\n  /**\n   * Google Map\n   */\n  map: google.maps.Map;\n\n  /**\n   * Markers on the map\n   */\n  markers = new Array();\n\n  /**\n   * Current position\n   */\n  position: Observable;\n\n  /**\n   * The places nearby\n   */\n  places: Observable>;\n\n  /**\n   * Reference to the Google Map element\n   */\n  @ViewChild('gmap', { read: ElementRef })\n  gmap: ElementRef;\n\n  /**\n   * Constructor\n   *\n   * @param _locationProvider Location Provider\n   * @param _el Element Reference\n   * @param _renderer Renderer\n   */\n  constructor(\n    @Inject('LocationProvider') private _locationProvider: LocationProvider,\n    @Inject('GoogleMapsService') private _gmaps: GoogleMapsService,\n    private _el: ElementRef,\n    private _renderer: Renderer2\n  ) {}\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n    this._gmaps.load()\n      .then(() => this.init())\n      .catch(err => console.error(err));\n  }\n\n  /**\n   * Initialialize map\n   */\n  private init(): void {\n    this.map = new google.maps.Map(this.gmap.nativeElement, {\n      zoom: 12\n    });\n\n    this._locationProvider.currentPosition.subscribe((place: Place) => {\n      this.map.setCenter({ lat: place.latitude, lng: place.longitude });\n    });\n\n    this._locationProvider\n      .getNearby('atm', progress => console.log(`... ${progress}%`))\n      .subscribe((places: Array) =>\n        places.map((place: Place) => {\n          const marker = new google.maps.Marker({\n            position: { lat: place.latitude, lng: place.longitude },\n            map: this.map\n          });\n\n          marker.addListener('click', () => {\n            this.map.setZoom(14);\n\n            const position = marker.getPosition();\n            this.map.setCenter({\n              lat: position.lat(),\n              lng: position.lng()\n            });\n          });\n\n          this.markers.push(marker);\n        })\n      );\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'rupeez-root'},{'name': 'AppShellComponent', 'selector': 'rupeez-app-shell'},{'name': 'LocatorComponent', 'selector': 'rupeez-locator'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocatorMockService.html":{"url":"injectables/LocatorMockService.html","title":"injectable - LocatorMockService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocatorMockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/locator-mock.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that mocks location data (not the current position)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNearby\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/locator-mock.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearby\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearby(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/locator-mock.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Get nearby places for the given type, based on your current position.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The type (ex: ATM)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    The places nearby\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _currentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _currentPosition:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator-mock.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current position (real)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentPosition\n                    \n                \n\n                \n                    \n                        getcurrentPosition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/locator-mock.service.ts:46\n                                \n                            \n                    \n                        \n                                Get the current position\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocationProvider } from '@rupeez/location-provider';\nimport { Place } from '@rupeez/place';\nimport { Observable, Observer, of } from 'rxjs';\n\n/**\n * Service that mocks location data (not the current position)\n */\n@Injectable()\nexport class LocatorMockService implements LocationProvider {\n\n  /**\n   * Current position (real)\n   */\n  private _currentPosition: Observable;\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    this._currentPosition = new Observable((observer: Observer) => {\n      navigator.geolocation.watchPosition(\n        (position: Position) => observer.next({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        } as Place), err => console.log(err), { maximumAge: 10000 });\n    });\n  }\n\n  /**\n   * Get nearby places for the given type, based on your current position.\n   *\n   * @param type The type (ex: ATM)\n   *\n   * @returns The places nearby\n   */\n  public getNearby(type: string): Observable> {\n    return of([\n      { latitude: 51.07, longitude: 3.74 } as Place\n    ]);\n  }\n\n  /**\n   * Get the current position\n   */\n  public get currentPosition(): Observable {\n    return this._currentPosition;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocatorService.html":{"url":"injectables/LocatorService.html","title":"injectable - LocatorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/locator.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that provides location data\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNearby\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/locator.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearby\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearby(type: string, onProgressChanged?: (progress?: number) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/locator.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Get nearby places for the given type, based on your current position.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The type (ex: ATM)\n\n                                                        \n                                                \n                                                \n                                                        onProgressChanged\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional handler to be called when there's some progress during download\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    The places nearby\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _currentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _currentPosition:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/locator.service.ts:17\n                            \n                        \n\n                \n                    \n                        Current position\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentPosition\n                    \n                \n\n                \n                    \n                        getcurrentPosition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/locator.service.ts:73\n                                \n                            \n                    \n                        \n                                Get the current position\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpEventType, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LocationProvider } from '@rupeez/location-provider';\nimport { Place } from '@rupeez/place';\nimport { Observable, Observer } from 'rxjs';\nimport { map, switchMap, tap, filter } from 'rxjs/operators';\n\n/**\n * Service that provides location data\n */\n@Injectable()\nexport class LocatorService implements LocationProvider {\n\n  /**\n   * Current position\n   */\n  private _currentPosition: Observable;\n\n  /**\n   * Constructor\n   *\n   * @param http\n   */\n  constructor(private http: HttpClient) {\n    this._currentPosition = new Observable((observer: Observer) => {\n      navigator.geolocation.watchPosition(\n        (position: Position) => observer.next({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        } as Place), err => console.log(err), { maximumAge: 10000 });\n    });\n  }\n\n  /**\n   * Get nearby places for the given type, based on your current position.\n   *\n   * @param type The type (ex: ATM)\n   * @param onProgressChanged Optional handler to be called when there's some progress during download\n   *\n   * @returns The places nearby\n   */\n  public getNearby(type: string, onProgressChanged?: (progress: number) => void): Observable> {\n    if (!onProgressChanged) {\n      return this._currentPosition.pipe(\n        switchMap(position => this.http\n          .post>('/nearby', { type: type, location: position })));\n    } else {\n      return this._currentPosition.pipe(\n        switchMap(position => {\n          const request = new HttpRequest('POST', '/nearby',\n            { type: type, location: position },\n            { reportProgress: true, responseType: 'json' });\n\n          return this.http\n            .request>(request);\n        }),\n        tap(event => {\n          if (event.type === HttpEventType.DownloadProgress) {\n            const progress = (event.loaded / event.total) * 100;\n            onProgressChanged(progress);\n          }\n        }),\n        filter(event => event.type === HttpEventType.Response),\n        map((event: HttpResponse>) => event.body)\n      );\n    }\n  }\n\n  /**\n   * Get the current position\n   *\n   */\n  public get currentPosition(): Observable {\n    return this._currentPosition;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingInterceptor.html":{"url":"classes/LoggingInterceptor.html","title":"class - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logging-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                HTTP Interceptor for Logging\n\n            \n\n\n            \n                Implements\n            \n            \n                        HttpInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/logging-interceptor.ts:15\n                            \n                        \n\n\n                \n                    \n                            Intercept HTTP exchange\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                request\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                handover function to call the next handler in the interceptorchain\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * HTTP Interceptor for Logging\n */\nexport class LoggingInterceptor implements HttpInterceptor {\n    /**\n     * Intercept HTTP exchange\n     *\n     * @param req request\n     * @param next handover function to call the next handler in the interceptorchain\n     */\n    public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        // REMARK: request & response objects are immutable\n\n        console.log(`♦♢◊♢♦ [${req.method}] ${req.url}`);\n        return next\n            .handle(req)\n            .pipe(\n            map(event => {\n                if (event.type === HttpEventType.Response) {\n                    const res = event;\n                    console.log(`♦♢◊♢♦ ${res.url} (${res.status} ${res.statusText})`);\n                }\n\n                return event;\n            }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Main.html":{"url":"classes/Main.html","title":"class - Main","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Main\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/main.ts\n        \n\n            \n                Description\n            \n            \n                Main class for Express Server\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _app\n                            \n                            \n                                    Private\n                                _mapService\n                            \n                            \n                                    Private\n                                _server\n                            \n                            \n                                    Private\n                                _settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDefaultRoutes\n                            \n                            \n                                    Public\n                                addLoggingInterceptor\n                            \n                            \n                                    Public\n                                allowCors\n                            \n                            \n                                    Public\n                                enforceHttps\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerAPIHandlers\n                            \n                            \n                                    Public\n                                setupCompression\n                            \n                            \n                                    Public\n                                setupStaticContent\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings?: Object)\n                    \n                \n                        \n                            \n                                Defined in src/server/main.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _app\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _app:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/server/main.ts:16\n                            \n                        \n\n                \n                    \n                        Express App\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _mapService:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/server/main.ts:31\n                            \n                        \n\n                \n                    \n                        Google Map Client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _server\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _server:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/server/main.ts:21\n                            \n                        \n\n                \n                    \n                        Express Server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _settings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _settings:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/server/main.ts:26\n                            \n                        \n\n                \n                    \n                        Settings\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addDefaultRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDefaultRoutes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:108\n                            \n                        \n\n\n                \n                    \n                            Add default routes\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addLoggingInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addLoggingInterceptor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:96\n                            \n                        \n\n\n                \n                    \n                            Add Logging Interceptor\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allowCors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        allowCors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:89\n                            \n                        \n\n\n                \n                    \n                            Allows CORS (All Requests)\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enforceHttps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enforceHttps()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:161\n                            \n                        \n\n\n                \n                    \n                            Ridirects all HTTP traffic to HTTPS\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:67\n                            \n                        \n\n\n                \n                    \n                            Initialize\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerAPIHandlers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerAPIHandlers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:131\n                            \n                        \n\n\n                \n                    \n                            Register all API handlers\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setupCompression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupCompression()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:81\n                            \n                        \n\n\n                \n                    \n                            Setup Compression (with shrink-ray)\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setupStaticContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupStaticContent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:122\n                            \n                        \n\n\n                \n                    \n                            Expose any static content\n\n\n                            \n                                Returns :     Main\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:179\n                            \n                        \n\n\n                \n                    \n                            Start the server\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/main.ts:187\n                            \n                        \n\n\n                \n                    \n                            Stop the server\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n\n                \n                    \n                        getsettings()\n                    \n                \n                            \n                                \n                                    Defined in src/server/main.ts:53\n                                \n                            \n                    \n                        \n                                Get settings\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mapService\n                    \n                \n\n                \n                    \n                        getmapService()\n                    \n                \n                            \n                                \n                                    Defined in src/server/main.ts:60\n                                \n                            \n                    \n                        \n                                Get the Google Client\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import * as gmaps from '@google/maps';\nimport * as express from 'express';\nimport { NextFunction, Request, Response } from 'express';\nimport * as fs from 'fs';\nimport * as shrinkray from 'shrink-ray';\nimport * as cors from 'cors';\n\n/**\n * Main class for Express Server\n */\nexport class Main {\n\n    /**\n     * Express App\n     */\n    private _app;\n\n    /**\n     * Express Server\n     */\n    private _server;\n\n    /**\n     * Settings\n     */\n    private _settings;\n\n    /**\n     * Google Map Client\n     */\n    private _mapService;\n\n    /**\n     * Constructor\n     *\n     * @param settings\n     */\n    constructor(settings?: Object) {\n        this._app = express();\n\n        if (settings) {\n            this._settings = settings;\n        } else {\n            this._settings = JSON.parse(fs.readFileSync('settings.json', 'utf-8'));\n        }\n\n        this._mapService = gmaps.createClient({ key: this._settings.googleMapsAPIKey });\n    }\n\n    /**\n     * Get settings\n     */\n    public get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Get the Google Client\n     */\n    public get mapService() {\n        return this._mapService;\n    }\n\n    /**\n     * Initialize\n     */\n    public init(): Main {\n        return this\n            .addLoggingInterceptor()\n            .enforceHttps()\n            .setupCompression()\n            .allowCors()\n            .setupStaticContent()\n            .registerAPIHandlers()\n            .addDefaultRoutes();\n    }\n\n    /**\n     * Setup Compression (with shrink-ray)\n     */\n    public setupCompression(): Main {\n        this._app.use(shrinkray());\n        return this;\n    }\n\n    /**\n     * Allows CORS (All Requests)\n     */\n    public allowCors(): Main {\n        this._app.use(cors());\n        return this;\n    }\n    /**\n     * Add Logging Interceptor\n     */\n    public addLoggingInterceptor(): Main {\n        this._app.use((request: Request, response: Response, next: NextFunction) => {\n            console.log(`[${request.method}] (${request.protocol}) > ${request.path} (${response.statusCode})`);\n            next();\n        });\n\n        return this;\n    }\n\n    /**\n     * Add default routes\n     */\n    public addDefaultRoutes(): Main {\n        // redirect to root\n        // app.use('**', (req,res) => res.redirect('/'));\n        this._app.use('**', (request: Request, response: Response, next: NextFunction) => {\n            response.sendFile(__dirname + '/index.html');\n            console.log(`sending index file`);\n        });\n\n        return this;\n    }\n\n    /**\n     * Expose any static content\n     */\n    public setupStaticContent(): Main {\n        this._app.use(express.static(__dirname));\n\n        return this;\n    }\n\n    /**\n     * Register all API handlers\n     */\n    public registerAPIHandlers(): Main {\n        this._app.post('/nearby', express.json(), (request: Request, response: Response, next: NextFunction) => {\n            this._mapService.placesNearby({\n                opennow: true,\n                type: request.body.type,\n                location: request.body.location,\n                rankby: 'distance'\n            }, (err, res) => {\n                if (!err) {\n                    // res.pipe(response, { end: true });\n\n                    response.send(res.json.results.map(place => {\n                        return {\n                            longitude: place.geometry.location.lng,\n                            latitude: place.geometry.location.lat\n                        };\n                    }));\n                } else {\n                    response.statusMessage = err;\n                    response.sendStatus(500);\n                }\n            });\n        });\n\n        return this;\n    }\n\n    /**\n     * Ridirects all HTTP traffic to HTTPS\n     */\n    public enforceHttps(): Main {\n        this._app.use((request: Request, response: Response, next: NextFunction) => {\n            const secure = request.secure || request.headers['x-forwarded-proto'] === 'https';\n\n            if (this._settings.https && !secure) {\n                response.redirect(['https://', request.get('Host'), request.url].join(''));\n                console.log(`redirect to https`);\n            } else {\n                next();\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Start the server\n     */\n    public start(): void {\n        this._server = this._app.listen(process.env.PORT || this._settings.port);\n        console.log('server listening on port: ', this._settings.port);\n    }\n\n    /**\n     * Stop the server\n     */\n    public stop(): void {\n        console.log('server stopping');\n        this._server.close();\n    }\n}\n\nif (require.main === module) {\n    new Main()\n        .init()\n        .start();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Place.html":{"url":"classes/Place.html","title":"class - Place","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Place\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/place.ts\n        \n\n            \n                Description\n            \n            \n                Place\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latitude\n                            \n                            \n                                    Private\n                                _longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _latitude\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _latitude:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/place.ts:14\n                            \n                        \n\n                \n                    \n                        Latitude of this Place\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _longitude\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _longitude:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/place.ts:9\n                            \n                        \n\n                \n                    \n                        Longitude of this Place\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n\n                \n                    \n                        getlongitude()\n                    \n                \n                            \n                                \n                                    Defined in src/app/place.ts:19\n                                \n                            \n                    \n                        \n                                Get the longitude\n\n\n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n                \n                    \n                        setlongitude(longitude: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/place.ts:26\n                                \n                            \n                    \n                        \n                                Set the longitude\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            longitude\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n\n                \n                    \n                        getlatitude()\n                    \n                \n                            \n                                \n                                    Defined in src/app/place.ts:33\n                                \n                            \n                    \n                        \n                                Get the latitude\n\n\n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n                \n                    \n                        setlatitude(latitude: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/place.ts:40\n                                \n                            \n                    \n                        \n                                Set the latitude\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            latitude\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class Place {\n\n    /**\n     * Longitude of this Place\n     */\n    private _longitude: number;\n\n    /**\n     * Latitude of this Place\n     */\n    private _latitude: number;\n\n    /**\n     * Get the longitude\n     */\n    public get longitude(): number {\n        return this._longitude;\n    }\n\n    /**\n     * Set the longitude\n     */\n    public set longitude(longitude: number) {\n        this._longitude = longitude;\n    }\n\n    /**\n     * Get the latitude\n     */\n    public get latitude(): number {\n        return this._latitude;\n    }\n\n    /**\n     * Set the latitude\n     */\n    public set latitude(latitude: number) {\n        this._latitude = latitude;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app-shell/app-shell.component.ts\n            \n            \n                component\n            \n            \n                AppShellComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/browser-native.service.ts\n            \n            \n                injectable\n            \n            \n                BrowserNativeService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/google-maps-mock.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleMapsMockService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/google-maps.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleMapsService\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/location-provider.ts\n            \n            \n                interface\n            \n            \n                LocationProvider\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/locator-mock.service.ts\n            \n            \n                injectable\n            \n            \n                LocatorMockService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/locator.service.ts\n            \n            \n                injectable\n            \n            \n                LocatorService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/locator/locator.component.ts\n            \n            \n                component\n            \n            \n                LocatorComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/locator/locator.component.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/logging-interceptor.ts\n            \n            \n                class\n            \n            \n                LoggingInterceptor\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/place.ts\n            \n            \n                class\n            \n            \n                Place\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.stg.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/server/main.ts\n            \n            \n                class\n            \n            \n                Main\n            \n            \n                100 %\n                (16/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.2\n        \n            @angular/common : ^6.0.2\n        \n            @angular/compiler : ^6.0.2\n        \n            @angular/core : ^6.0.2\n        \n            @angular/forms : ^6.0.2\n        \n            @angular/http : ^6.0.2\n        \n            @angular/platform-browser : ^6.0.2\n        \n            @angular/platform-browser-dynamic : ^6.0.2\n        \n            @angular/platform-server : ^6.0.2\n        \n            @angular/router : ^6.0.2\n        \n            @angular/service-worker : ^6.0.2\n        \n            @google/maps : ^0.4.6\n        \n            @types/googlemaps : ^3.30.8\n        \n            ajv : ^6.5.0\n        \n            core-js : ^2.5.6\n        \n            cors : ^2.8.4\n        \n            express : ^4.16.3\n        \n            rxjs : ^6.1.0\n        \n            shrink-ray : ^0.1.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    Rupeez\n\n\nHuh\nIt's an ATM Locator ...\nPrerequisites\n\nGoogle Maps API key\n\nTable of Contents\n\nProject Status\nSupported Devices\nInstallation\nConfiguration\nUsage\nDocumentation\nDemo\nLimitations\nLicense\n\nProject Status\nSupported Devices\nInstallation\nBEFORE YOU INSTALL: please read the prerequisites\nnpm install rupeezConfiguration\nMake a settings.json in rupeez folder with:\n{\n\n}Usage\nNavigate to http://[hostname]:[port]]/\nDocumentation\nSee docs\nDemo\nSee demo\nScreenshots\nLimitations\nLicense\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Cédric Elslander\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLocatorComponent\n\nLocatorComponent\n\nAppModule -->\n\nLocatorComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBrowserNativeService\n\nBrowserNativeService\n\nAppModule -->\n\nBrowserNativeService->AppModule\n\n\n\n\n\nAppShellComponent\n\nAppShellComponent\n\nAppServerModule -->\n\nAppShellComponent->AppServerModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stg.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            google   (src/.../locator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  location: true\n}\n                        \n                    \n\n                \n                    \n                        Production Environment\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.stg.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  location: true\n}\n                        \n                    \n\n                \n                    \n                        Staging Environment\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  location: false\n}\n                        \n                    \n\n                \n                    \n                        Environment\n\n                    \n                \n\n            \n        \n\n    src/app/locator/locator.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
